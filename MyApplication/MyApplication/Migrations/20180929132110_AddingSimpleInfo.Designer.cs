// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyApplication.Models;

namespace MyApplication.Migrations
{
    [DbContext(typeof(ToursDbContext))]
    [Migration("20180929132110_AddingSimpleInfo")]
    partial class AddingSimpleInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyApplication.Models.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<string>("SubText");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("MyApplication.Models.Advice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<int>("ServiceId");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("Advices");
                });

            modelBuilder.Entity("MyApplication.Models.Azerbaijan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TourAction");

                    b.Property<string>("TourDuration");

                    b.Property<string>("TourIcon");

                    b.Property<int?>("TourId1");

                    b.Property<int?>("TourIdId");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourName");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourTitle");

                    b.HasKey("Id");

                    b.HasIndex("TourId1");

                    b.HasIndex("TourIdId");

                    b.ToTable("Azerbaijans");
                });

            modelBuilder.Entity("MyApplication.Models.AzeTitleSubtitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstSlide");

                    b.Property<string>("FirstSlideText");

                    b.Property<string>("FourthSlide");

                    b.Property<string>("FourthSlideText");

                    b.Property<string>("SecondSlide");

                    b.Property<string>("SecondSlideText");

                    b.Property<string>("SubTitle");

                    b.Property<string>("ThirdSlide");

                    b.Property<string>("ThirdSlideText");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("AzeTitleSubTitles");
                });

            modelBuilder.Entity("MyApplication.Models.BakuJara", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("Duration");

                    b.Property<string>("Email");

                    b.Property<int>("EventId");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<int?>("MessageId");

                    b.Property<string>("Number");

                    b.Property<string>("Price");

                    b.Property<string>("SecondNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<string>("TourAdditional");

                    b.Property<string>("TourCheckIn");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourInformation");

                    b.Property<string>("TourName");

                    b.Property<string>("TourSecondAdditional");

                    b.Property<string>("TourText");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourVideo");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.HasIndex("MessageId");

                    b.ToTable("BakuJaras");
                });

            modelBuilder.Entity("MyApplication.Models.BilgehDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutHotel");

                    b.HasKey("Id");

                    b.ToTable("BilgehDescriptions");
                });

            modelBuilder.Entity("MyApplication.Models.BilgehPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("Duration");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<string>("Number");

                    b.Property<string>("Price");

                    b.Property<string>("SecondNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<string>("TourAdditional");

                    b.Property<string>("TourAdditionalSecond");

                    b.Property<string>("TourCheckIn");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourInformation");

                    b.Property<string>("TourName");

                    b.Property<string>("TourText");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourVideo");

                    b.HasKey("Id");

                    b.ToTable("BilgehPages");
                });

            modelBuilder.Entity("MyApplication.Models.BronBilgeh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.HasKey("Id");

                    b.ToTable("BronBilgehs");
                });

            modelBuilder.Entity("MyApplication.Models.BronGoyGol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.HasKey("Id");

                    b.ToTable("BronGoyGols");
                });

            modelBuilder.Entity("MyApplication.Models.BronHotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Price");

                    b.Property<string>("TypeOf");

                    b.HasKey("Id");

                    b.ToTable("BronHotels");
                });

            modelBuilder.Entity("MyApplication.Models.BronInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<int>("BronEnum");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.HasKey("Id");

                    b.ToTable("BronInfos");
                });

            modelBuilder.Entity("MyApplication.Models.BronLankaran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.HasKey("Id");

                    b.ToTable("BronLankarans");
                });

            modelBuilder.Entity("MyApplication.Models.BronNaftalan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.HasKey("Id");

                    b.ToTable("BronNaftalans");
                });

            modelBuilder.Entity("MyApplication.Models.BronOnlyTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTour");

                    b.HasKey("Id");

                    b.ToTable("BronOnlyTransfers");
                });

            modelBuilder.Entity("MyApplication.Models.Brons.PersonalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Baby");

                    b.Property<string>("Birth")
                        .IsRequired();

                    b.Property<int>("BronHotelId");

                    b.Property<int?>("Child");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Message");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Number");

                    b.Property<int>("Parent");

                    b.Property<string>("PassportNumber")
                        .IsRequired();

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("BronHotelId")
                        .IsUnique();

                    b.ToTable("PersonalInfos");
                });

            modelBuilder.Entity("MyApplication.Models.BronTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TourIncludedIcon");

                    b.Property<string>("TourIncludedText");

                    b.HasKey("Id");

                    b.ToTable("BronTitles");
                });

            modelBuilder.Entity("MyApplication.Models.Compliance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutId");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<int?>("MessageId");

                    b.Property<string>("SubText");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AboutId");

                    b.HasIndex("MessageId");

                    b.ToTable("Compliances");
                });

            modelBuilder.Entity("MyApplication.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<int?>("MessageId");

                    b.Property<string>("Number");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<double?>("lat");

                    b.Property<double?>("lng");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("MyApplication.Models.Cruiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<int?>("MessageId");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int>("ServiceId");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Cruizs");
                });

            modelBuilder.Entity("MyApplication.Models.DemoStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("MyApplication.Models.Emergency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<int?>("MessageId");

                    b.Property<int>("ServiceId");

                    b.Property<string>("Subtitle");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Emergencies");
                });

            modelBuilder.Entity("MyApplication.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Duration");

                    b.Property<string>("EventAction");

                    b.Property<string>("EventIcon");

                    b.Property<string>("EventImage");

                    b.Property<string>("EventName");

                    b.Property<string>("EventTime");

                    b.Property<string>("EventTitle");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<int>("ServiceId");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("Events","Event");
                });

            modelBuilder.Entity("MyApplication.Models.Festival", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("Duration");

                    b.Property<string>("Email");

                    b.Property<int>("EventId");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<int?>("MessageId");

                    b.Property<string>("Number");

                    b.Property<string>("Price");

                    b.Property<string>("SecondNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<string>("TourAdditional");

                    b.Property<string>("TourCheckIn");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourInformation");

                    b.Property<string>("TourName");

                    b.Property<string>("TourSecondAdditional");

                    b.Property<string>("TourText");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourVideo");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.HasIndex("MessageId");

                    b.ToTable("Festivals");
                });

            modelBuilder.Entity("MyApplication.Models.FireMountainDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TourInclude");

                    b.HasKey("Id");

                    b.ToTable("FireMountainDescriptions");
                });

            modelBuilder.Entity("MyApplication.Models.FireMountainPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("Duration");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<string>("Number");

                    b.Property<string>("Price");

                    b.Property<string>("SecondNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<string>("TourAdditional");

                    b.Property<string>("TourAdditionalSecond");

                    b.Property<string>("TourCheckIn");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourInformation");

                    b.Property<string>("TourName");

                    b.Property<string>("TourText");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourVideo");

                    b.HasKey("Id");

                    b.ToTable("FireMountainPages");
                });

            modelBuilder.Entity("MyApplication.Models.FormulaPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("Duration");

                    b.Property<string>("Email");

                    b.Property<int>("EventId");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<int?>("MessageId");

                    b.Property<string>("Number");

                    b.Property<string>("Price");

                    b.Property<string>("SecondNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<string>("TourAdditional");

                    b.Property<string>("TourCheckIn");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourInformation");

                    b.Property<string>("TourName");

                    b.Property<string>("TourSecondAdditional");

                    b.Property<string>("TourText");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourVideo");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.HasIndex("MessageId");

                    b.ToTable("FormulaPages");
                });

            modelBuilder.Entity("MyApplication.Models.GoyGolDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TourInclude");

                    b.HasKey("Id");

                    b.ToTable("GoyGolDescriptions");
                });

            modelBuilder.Entity("MyApplication.Models.GoyGolPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("Duration");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<string>("Number");

                    b.Property<string>("Price");

                    b.Property<string>("SecondNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<string>("TourAdditional");

                    b.Property<string>("TourCheckIn");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourInformation");

                    b.Property<string>("TourName");

                    b.Property<string>("TourText");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourVideo");

                    b.HasKey("Id");

                    b.ToTable("GoyGolPages");
                });

            modelBuilder.Entity("MyApplication.Models.GroupTour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<int?>("MessageId");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int>("ServiceId");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupTours","GroupTour");
                });

            modelBuilder.Entity("MyApplication.Models.Health", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Duration");

                    b.Property<int>("ServiceId");

                    b.Property<string>("TourAction");

                    b.Property<string>("TourIcon");

                    b.Property<int>("TourId");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourName");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourTitle");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("TourId");

                    b.ToTable("Healths");
                });

            modelBuilder.Entity("MyApplication.Models.HotelList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<string>("OtherPhone");

                    b.Property<string>("Phone");

                    b.Property<int>("ServiceId");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("HotelLists","HotelList");
                });

            modelBuilder.Entity("MyApplication.Models.HotelListDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HotelLink");

                    b.Property<string>("ListHotel");

                    b.HasKey("Id");

                    b.ToTable("HotelListDescriptions");
                });

            modelBuilder.Entity("MyApplication.Models.Incoming", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Duration");

                    b.Property<int>("ServiceId");

                    b.Property<string>("TourAction");

                    b.Property<string>("TourIcon");

                    b.Property<int>("TourId");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourName");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourTitle");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("TourId");

                    b.ToTable("Incoming");
                });

            modelBuilder.Entity("MyApplication.Models.Insuarance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<string>("OtherPhone");

                    b.Property<string>("Phone");

                    b.Property<int>("ServiceId");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubText");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("Insuarances","Insuarance");
                });

            modelBuilder.Entity("MyApplication.Models.InsuaranceDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutInsuarance");

                    b.HasKey("Id");

                    b.ToTable("InsuaranceDescriptions");
                });

            modelBuilder.Entity("MyApplication.Models.LankaranDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTour");

                    b.HasKey("Id");

                    b.ToTable("LankaranDescriptions");
                });

            modelBuilder.Entity("MyApplication.Models.LankaranPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("Duration");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<string>("Number");

                    b.Property<string>("Price");

                    b.Property<string>("SecondAdditional");

                    b.Property<string>("SecondNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<string>("TourAdditional");

                    b.Property<string>("TourCheckIn");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourInformation");

                    b.Property<string>("TourName");

                    b.Property<string>("TourText");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourVideo");

                    b.HasKey("Id");

                    b.ToTable("LankaranPages");
                });

            modelBuilder.Entity("MyApplication.Models.MainPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TourAction");

                    b.Property<string>("TourDuration");

                    b.Property<int?>("TourId1");

                    b.Property<int?>("TourIdId");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourName");

                    b.Property<string>("TourPrice");

                    b.Property<string>("TourTime");

                    b.HasKey("Id");

                    b.HasIndex("TourId1");

                    b.HasIndex("TourIdId");

                    b.ToTable("MainPages");
                });

            modelBuilder.Entity("MyApplication.Models.MainPageTitleSubTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstSlide");

                    b.Property<string>("FirstSlideText");

                    b.Property<string>("FourthSlide");

                    b.Property<string>("FourthSlideText");

                    b.Property<string>("SecondSlide");

                    b.Property<string>("SecondSlideText");

                    b.Property<string>("ThirdSlide");

                    b.Property<string>("ThirdSlideText");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("MainPageTitles");
                });

            modelBuilder.Entity("MyApplication.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Messaging")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MyApplication.Models.NaftalanDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Hotels");

                    b.HasKey("Id");

                    b.ToTable("NaftalanDescriptions");
                });

            modelBuilder.Entity("MyApplication.Models.NaftalanPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("Duration");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<string>("Number");

                    b.Property<string>("Price");

                    b.Property<string>("SecondNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<string>("TourAdditional");

                    b.Property<string>("TourAdditionalSecond");

                    b.Property<string>("TourCheckIn");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourInformation");

                    b.Property<string>("TourName");

                    b.Property<string>("TourText");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourVideo");

                    b.HasKey("Id");

                    b.ToTable("NaftalanPages");
                });

            modelBuilder.Entity("MyApplication.Models.OnlinePayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNumber");

                    b.Property<string>("CardType");

                    b.Property<string>("ExpirationDate");

                    b.Property<int>("UserId");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OnlinePayments","OnlinePayment");
                });

            modelBuilder.Entity("MyApplication.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutId");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<string>("SubText");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AboutId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("MyApplication.Models.QabalaDescriptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTour");

                    b.HasKey("Id");

                    b.ToTable("QabalaDescriptions");
                });

            modelBuilder.Entity("MyApplication.Models.QabalaPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("Duration");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<string>("Number");

                    b.Property<string>("Price");

                    b.Property<string>("SecondAdditional");

                    b.Property<string>("SecondNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<string>("TourAdditional");

                    b.Property<string>("TourCheckIn");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourInformation");

                    b.Property<string>("TourName");

                    b.Property<string>("TourText");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourVideo");

                    b.HasKey("Id");

                    b.ToTable("QabalaPages");
                });

            modelBuilder.Entity("MyApplication.Models.QakhDescriptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTour");

                    b.HasKey("Id");

                    b.ToTable("QakhDescriptions");
                });

            modelBuilder.Entity("MyApplication.Models.QakhPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("Duration");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<string>("Number");

                    b.Property<string>("Price");

                    b.Property<string>("SecondAdditional");

                    b.Property<string>("SecondNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<string>("TourAdditional");

                    b.Property<string>("TourCheckIn");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourInformation");

                    b.Property<string>("TourName");

                    b.Property<string>("TourText");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourVideo");

                    b.HasKey("Id");

                    b.ToTable("QakhPages");
                });

            modelBuilder.Entity("MyApplication.Models.QubaPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("Duration");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<string>("Number");

                    b.Property<string>("Price");

                    b.Property<string>("SecondAdditional");

                    b.Property<string>("SecondNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<string>("TourAdditional");

                    b.Property<string>("TourCheckIn");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourInformation");

                    b.Property<string>("TourName");

                    b.Property<string>("TourText");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourVideo");

                    b.HasKey("Id");

                    b.ToTable("QubaPages");
                });

            modelBuilder.Entity("MyApplication.Models.QubaPageDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutQuba");

                    b.HasKey("Id");

                    b.ToTable("QubaPageDescriptions");
                });

            modelBuilder.Entity("MyApplication.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<bool>("_IsVisible");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("MyApplication.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("Facebook");

                    b.Property<string>("Fax");

                    b.Property<string>("Icon");

                    b.Property<string>("Instagram");

                    b.Property<string>("Linkedin");

                    b.Property<string>("OtherAddress");

                    b.Property<string>("Phone");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.Property<string>("Twitter");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("MyApplication.Models.ShakiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("Duration");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<string>("Number");

                    b.Property<string>("Price");

                    b.Property<string>("SecondNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<string>("TourAdditional");

                    b.Property<string>("TourAdditionalSecond");

                    b.Property<string>("TourCheckIn");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourInformation");

                    b.Property<string>("TourName");

                    b.Property<string>("TourText");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourVideo");

                    b.HasKey("Id");

                    b.ToTable("ShakiPages");
                });

            modelBuilder.Entity("MyApplication.Models.ShakiPageDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TourInclude");

                    b.HasKey("Id");

                    b.ToTable("ShakiPageDescriptions");
                });

            modelBuilder.Entity("MyApplication.Models.SimiliarTour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourIcon");

                    b.Property<string>("AboutTourText");

                    b.HasKey("Id");

                    b.ToTable("SimiliarTours");
                });

            modelBuilder.Entity("MyApplication.Models.TitleAndSubTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<int>("StaticPage");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<bool>("_IsService");

                    b.HasKey("Id");

                    b.ToTable("TitleAndSubTitles");
                });

            modelBuilder.Entity("MyApplication.Models.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<decimal?>("Price");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tours","Tour");
                });

            modelBuilder.Entity("MyApplication.Models.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<string>("Key");

                    b.Property<int?>("MessageId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Number");

                    b.Property<int>("ServiceId");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.Property<string>("Value");

                    b.Property<double?>("lat");

                    b.Property<double?>("lng");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Transfers","Transfer");
                });

            modelBuilder.Entity("MyApplication.Models.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<int?>("MessageId");

                    b.Property<string>("OtherPhone");

                    b.Property<string>("Phone");

                    b.Property<decimal>("Price");

                    b.Property<int>("ServiceId");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<int>("TourId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("TourId");

                    b.HasIndex("UserId");

                    b.ToTable("Transports","Transport");
                });

            modelBuilder.Entity("MyApplication.Models.TransportDescription", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTransport");

                    b.HasKey("id");

                    b.ToTable("TransportDescriptions");
                });

            modelBuilder.Entity("MyApplication.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Number");

                    b.Property<string>("PassportNumber");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(18);

                    b.Property<int>("Phone");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("ZipCode");

                    b.Property<bool>("_Isbronned");

                    b.HasKey("Id");

                    b.ToTable("Users","User");
                });

            modelBuilder.Entity("MyApplication.Models.Vip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<string>("Key");

                    b.Property<int?>("MessageId");

                    b.Property<string>("OtherPhone");

                    b.Property<string>("Phone");

                    b.Property<int>("ServiceId");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubText");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Vips");
                });

            modelBuilder.Entity("MyApplication.Models.VulkanDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTour");

                    b.HasKey("Id");

                    b.ToTable("VulkanDescriptions");
                });

            modelBuilder.Entity("MyApplication.Models.VulkanPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutTourNumber");

                    b.Property<string>("AboutTourText");

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("Duration");

                    b.Property<string>("Email");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageText");

                    b.Property<string>("Number");

                    b.Property<string>("Price");

                    b.Property<string>("SecondAdditional");

                    b.Property<string>("SecondNumber");

                    b.Property<string>("SiteAddress");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<string>("TourAdditional");

                    b.Property<string>("TourCheckIn");

                    b.Property<string>("TourImage");

                    b.Property<string>("TourInformation");

                    b.Property<string>("TourName");

                    b.Property<string>("TourText");

                    b.Property<string>("TourTime");

                    b.Property<string>("TourVideo");

                    b.HasKey("Id");

                    b.ToTable("VulkanPages");
                });

            modelBuilder.Entity("MyApplication.Models.WhyWe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutId");

                    b.Property<string>("ImagePath");

                    b.Property<string>("ImageTitle");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AboutId");

                    b.ToTable("WhyWe");
                });

            modelBuilder.Entity("MyApplication.Models.Advice", b =>
                {
                    b.HasOne("MyApplication.Models.Service", "Service")
                        .WithMany("Advices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.Azerbaijan", b =>
                {
                    b.HasOne("MyApplication.Models.Tour", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId1");

                    b.HasOne("MyApplication.Models.Tour", "TourId")
                        .WithMany()
                        .HasForeignKey("TourIdId");
                });

            modelBuilder.Entity("MyApplication.Models.BakuJara", b =>
                {
                    b.HasOne("MyApplication.Models.Event", "Event")
                        .WithOne("BakuJara")
                        .HasForeignKey("MyApplication.Models.BakuJara", "EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyApplication.Models.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");
                });

            modelBuilder.Entity("MyApplication.Models.Brons.PersonalInformation", b =>
                {
                    b.HasOne("MyApplication.Models.BronHotel", "BronHotel")
                        .WithOne("PersonalInformation")
                        .HasForeignKey("MyApplication.Models.Brons.PersonalInformation", "BronHotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.Compliance", b =>
                {
                    b.HasOne("MyApplication.Models.About", "About")
                        .WithMany("Compliances")
                        .HasForeignKey("AboutId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyApplication.Models.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");
                });

            modelBuilder.Entity("MyApplication.Models.Contact", b =>
                {
                    b.HasOne("MyApplication.Models.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");
                });

            modelBuilder.Entity("MyApplication.Models.Cruiz", b =>
                {
                    b.HasOne("MyApplication.Models.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");

                    b.HasOne("MyApplication.Models.Service", "Service")
                        .WithMany("Cruizs")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyApplication.Models.User", "User")
                        .WithMany("Cruizs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.Emergency", b =>
                {
                    b.HasOne("MyApplication.Models.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");

                    b.HasOne("MyApplication.Models.Service", "Service")
                        .WithMany("Emergencies")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.Event", b =>
                {
                    b.HasOne("MyApplication.Models.Service", "Service")
                        .WithMany("Events")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.Festival", b =>
                {
                    b.HasOne("MyApplication.Models.Event", "Event")
                        .WithOne("Festival")
                        .HasForeignKey("MyApplication.Models.Festival", "EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyApplication.Models.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");
                });

            modelBuilder.Entity("MyApplication.Models.FormulaPage", b =>
                {
                    b.HasOne("MyApplication.Models.Event", "Event")
                        .WithOne("FormulaPage")
                        .HasForeignKey("MyApplication.Models.FormulaPage", "EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyApplication.Models.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");
                });

            modelBuilder.Entity("MyApplication.Models.GroupTour", b =>
                {
                    b.HasOne("MyApplication.Models.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");

                    b.HasOne("MyApplication.Models.Service", "Service")
                        .WithMany("GroupTours")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyApplication.Models.User", "User")
                        .WithMany("GroupTours")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.Health", b =>
                {
                    b.HasOne("MyApplication.Models.Service", "Service")
                        .WithMany("Healths")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyApplication.Models.Tour", "Tour")
                        .WithMany("Healths")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.HotelList", b =>
                {
                    b.HasOne("MyApplication.Models.Service", "Service")
                        .WithMany("HotelLists")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.Incoming", b =>
                {
                    b.HasOne("MyApplication.Models.Service", "Service")
                        .WithMany("Incomings")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyApplication.Models.Tour", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.Insuarance", b =>
                {
                    b.HasOne("MyApplication.Models.Service", "Service")
                        .WithMany("Insuarances")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.MainPage", b =>
                {
                    b.HasOne("MyApplication.Models.Tour", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId1");

                    b.HasOne("MyApplication.Models.Tour", "TourId")
                        .WithMany()
                        .HasForeignKey("TourIdId");
                });

            modelBuilder.Entity("MyApplication.Models.OnlinePayment", b =>
                {
                    b.HasOne("MyApplication.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.Profile", b =>
                {
                    b.HasOne("MyApplication.Models.About", "About")
                        .WithMany("Profiles")
                        .HasForeignKey("AboutId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.Tour", b =>
                {
                    b.HasOne("MyApplication.Models.User", "User")
                        .WithMany("Tours")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.Transfer", b =>
                {
                    b.HasOne("MyApplication.Models.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");

                    b.HasOne("MyApplication.Models.Service", "Service")
                        .WithMany("Transfers")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyApplication.Models.User", "User")
                        .WithMany("Transfers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.Transport", b =>
                {
                    b.HasOne("MyApplication.Models.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");

                    b.HasOne("MyApplication.Models.Service", "Service")
                        .WithMany("Transports")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyApplication.Models.Tour", "Tour")
                        .WithMany("Transports")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyApplication.Models.User", "User")
                        .WithMany("Transports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.Vip", b =>
                {
                    b.HasOne("MyApplication.Models.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId");

                    b.HasOne("MyApplication.Models.Service", "Service")
                        .WithMany("Vips")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyApplication.Models.User", "User")
                        .WithMany("Vips")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyApplication.Models.WhyWe", b =>
                {
                    b.HasOne("MyApplication.Models.About", "About")
                        .WithMany("WhyWes")
                        .HasForeignKey("AboutId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
